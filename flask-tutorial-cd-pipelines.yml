# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- development

variables:
  - template: "${{variables.System.ArtifactsDirectory}}/variables/manifest-flask.yml"

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: 
      vmimage: "ubuntu-latest"
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(System.DefaultWorkingDirectory)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool: "Self-Hosted-Agent"
    environment: Development
    strategy:
      runOnce:
        deploy:
          steps:

          - template: "${{variables.system.ArtifactsDirectory}}/templates/webAppDeploy.yml"
            parameters: 
              azureConnection: $(azureConnection)
              webAppName: $(webAppName)

#          - task: AzureWebApp@1
#            displayName: 'Deploy Azure Web App : $(webAppName)'
#            inputs:
#              azureSubscription: $(azureConnection)
#              appName: $(webAppName)
#              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
#          
#          - task: AzureCLI@2
#            inputs:
#              azureSubscription: $(azureConnection)
#              scriptType: 'pscore'
#              scriptLocation: 'inlineScript'
#              inlineScript: 'az webapp config set --resource-group $(resourceGroupName) --name $(webAppName) --startup-file "startup.txt"'